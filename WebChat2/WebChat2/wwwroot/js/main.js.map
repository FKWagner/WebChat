{"version":3,"sources":["webpack:///./app/App.js","webpack:///./app/Components/KanbanBoardContainer.js","webpack:///./app/Components/KanbanBoard.js","webpack:///./app/Components/List.js","webpack:///./app/Components/Card.js","webpack:///./app/Components/CheckList.js"],"names":["cardsList","id","title","description","color","status","tasks","name","done","document","getElementById","API_URL","API_HEADERS","Authorization","KanbanBoardContainer","arguments","state","cards","fetch","headers","then","response","json","responseData","setState","catch","error","console","log","cardId","taskName","cardIndex","findIndex","card","newTask","Date","now","nextState","$push","method","body","JSON","stringify","taskId","taskIndex","$splice","newDoneValue","$apply","toggle","toggleTask","bind","delete","deleteTask","add","addTask","KanbanBoard","props","taskCallbacks","filter","propTypes","arrayOf","object","List","map","string","isRequired","titlePropType","propName","componentName","value","length","Error","Card","showDetails","cardDetails","__html","sideColor","position","zIndex","top","bottom","left","width","backgroundColor","toggleDetails","number","CheckList","evt","key","target","task","checkInputKeyPress"],"mappings":"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","file":"main.js","sourcesContent":["import React from 'react'\r\nimport {render} from 'react-dom'\r\nimport KanbanBoardContainer from './Components/KanbanBoardContainer'\r\n\r\nlet cardsList = [\r\n    {\r\n        id: 1,\r\n        title: \"Read the Book\",\r\n        description: \"I should read the **whole** book and the online extensions\",\r\n        color: \"#BD8D31\",\r\n        status: \"in-progress\",\r\n        tasks: []\r\n    },\r\n    {\r\n        id: 2,\r\n        title: \"Write some code\",\r\n        description: \"Code along with the samples in the book. The complete source code can be found at [github](https://github.com/pro-react)\",\r\n        color: \"#3A7E28\",\r\n        status: \"todo\",\r\n        tasks: [\r\n            {\r\n                id: 1,\r\n                name: \"ContactList Example\",\r\n                done: true\r\n            },\r\n            {\r\n                id: 2,\r\n                name: \"Kanban Example\",\r\n                done: false\r\n            },\r\n            {\r\n                id: 3,\r\n                name: \"My own experiments\",\r\n                done: false\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 3,\r\n        title: \"This is a new card with a very long title, thus having more then 80 charaters lets throw a warning\",\r\n        description: \"Show custom propType failure\",\r\n        color: \"#AFFE\",\r\n        status: \"done\",\r\n        tasks: []\r\n    },\r\n]\r\n\r\nrender(<KanbanBoardContainer />, document.getElementById('root'))\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./app/App.js\n **/","import React, {Component} from 'react'\r\nimport update from 'react-addons-update'\r\nimport 'whatwg-fetch'\r\nimport 'babel-polyfill'\r\nimport KanbanBoard from './KanbanBoard'\r\n\r\nconst API_URL = 'http://kanbanapi.pro-react.com'\r\nconst API_HEADERS = {\r\n    'Content-Type': 'application/json',\r\n    Authorization: 'FWagner-education-test'\r\n}\r\n\r\nclass KanbanBoardContainer extends Component {\r\n    constructor(){\r\n        super(...arguments)\r\n        this.state = {\r\n            cards:[],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(API_URL+'/cards', {headers: API_HEADERS})\r\n        .then((response) => response.json())\r\n        .then((responseData) => {\r\n            this.setState({cards: responseData})\r\n        })\r\n        .catch((error) => {\r\n            console.log('Error fetching and parsing data', error)\r\n        })\r\n    }\r\n\r\n    addTask(cardId, taskName) {\r\n        let cardIndex = this.state.cards.findIndex((card) => card.id == cardId)\r\n\r\n        let newTask = {id: Date.now(), name: taskName, done: false}\r\n\r\n        let nextState = update(this.state.cards, {\r\n                            [cardIndex]: {\r\n                                tasks: {$push: [newTask] }\r\n                            }\r\n                        })\r\n        \r\n        this.setState({cards: nextState})\r\n\r\n        fetch(`${API_URL}/cards/${cardId}/tasks`, {\r\n            method: 'post',\r\n            headers: API_HEADERS,\r\n            body: JSON.stringify(newTask)\r\n        })\r\n        // promises running inside :)\r\n        .then((response) => response.json())\r\n        .then((responseData) => {\r\n            // When server returns the definitve ID used for the new Task on the server, update it on React\r\n            newTask.id = responseData.id\r\n            this.setState({cards: nextState})\r\n        })\r\n    }\r\n\r\n    deleteTask(cardId, taskId, taskIndex) {\r\n        // Find the index of the card\r\n        let cardIndex = this.state.cards.findIndex((card) => card.id == cardId)\r\n\r\n        // Create a new object without the task\r\n        let nextState = update(this.state.cards, {\r\n                                [cardIndex]: {\r\n                                    tasks: {$splice: [[taskIndex,1]] }\r\n                                }\r\n                            })\r\n\r\n        this.setState({cards: nextState})\r\n\r\n        // Call this API and remove the object server side\r\n        fetch(`${API_URL}/cards/${cardId}/tasks/${taskId}`, {\r\n            method: 'delete',\r\n            headers: API_HEADERS\r\n        })\r\n    }\r\n\r\n    toggleTask(cardId, taskId, taskIndex) {\r\n        // Find the index of the card\r\n        let cardIndex = this.state.cards.findIndex((card) => card.id == cardId)\r\n\r\n        let newDoneValue\r\n\r\n        let nextState = update(this.state.cards, {\r\n                                    [cardIndex]: {\r\n                                        tasks: {\r\n                                            [taskIndex]: {\r\n                                                done: { $apply: (done) => {\r\n                                                    newDoneValue = !done\r\n                                                    return newDoneValue\r\n                                                }}\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                })\r\n        \r\n        this.setState({cards: nextState})\r\n\r\n        // Update server site\r\n        fetch(`${API_URL}/cards/${cardId}/tasks/${taskId}`, {\r\n            method: 'put',\r\n            headers: API_HEADERS,\r\n            body: JSON.stringify({done: newDoneValue})\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <KanbanBoard cards={this.state.cards}\r\n                            taskCallbacks={{\r\n                                toggle: this.toggleTask.bind(this),\r\n                                delete: this.deleteTask.bind(this),\r\n                                   add: this.addTask.bind(this) }} />\r\n    }\r\n}\r\n\r\nexport default KanbanBoardContainer\n\n\n/** WEBPACK FOOTER **\n ** ./app/Components/KanbanBoardContainer.js\n **/","import React, { Component, PropTypes } from 'react'\r\nimport List from './List'\r\n\r\nclass KanbanBoard extends Component {\r\n    render(){\r\n        return (\r\n            <div className=\"app\">\r\n                <List id='todo'\r\n                    title='To Do'\r\n                    taskCallbacks={this.props.taskCallbacks}\r\n                    cards={this.props.cards.filter((card) => card.status === \"todo\")} />\r\n                <List id='in-progress'\r\n                    title='In Progress'\r\n                    taskCallbacks={this.props.taskCallbacks}\r\n                    cards={this.props.cards.filter((card) => card.status === \"in-progress\")} />\r\n                <List id='done'\r\n                    title='Done'\r\n                    taskCallbacks={this.props.taskCallbacks}\r\n                    cards={this.props.cards.filter((card) => card.status === \"done\")} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nKanbanBoard.propTypes = {\r\n    cards: PropTypes.arrayOf(PropTypes.object),\r\n    taskCallbacks: PropTypes.object\r\n}\r\n\r\nexport default KanbanBoard\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./app/Components/KanbanBoard.js\n **/","import React, {Component, PropTypes} from 'react'\r\nimport Card from './Card'\r\n\r\nclass List extends Component {\r\n    render() {\r\n        var cards = this.props.cards.map((card) => {\r\n            return <Card key={card.id}\r\n                         taskCallbacks={this.props.taskCallbacks}\r\n                         {...card} />\r\n        })\r\n\r\n        return(\r\n            <div className=\"list\">\r\n              <h1>{this.props.title}</h1>\r\n             {cards}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nList.propTypes = {    \r\n    title: PropTypes.string.isRequired,\r\n    cards: PropTypes.arrayOf(PropTypes.object),\r\n    taskCallbacks: PropTypes.object\r\n}\r\n\r\nexport default List\n\n\n/** WEBPACK FOOTER **\n ** ./app/Components/List.js\n **/","import React, {Component, PropTypes} from 'react'\r\nimport CheckList from './CheckList'\r\nimport marked from 'marked'\r\n\r\nlet titlePropType = (props, propName, componentName) => {\r\n    if(props[propName]) {\r\n        let value = props[propName]\r\n        if(typeof value !== 'string' || value.length > 80) {\r\n            return new Error (\r\n                `${propName} in ${componentName} is longer than 80 characters`\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nclass Card extends Component {\r\n    constructor() {\r\n        super(...arguments)\r\n        this.state = {\r\n            showDetails: false\r\n        }\r\n    }\r\n\r\n    toggleDetails() {\r\n        this.setState({showDetails: !this.state.showDetails})\r\n    }\r\n\r\n    render() {\r\n        let cardDetails;\r\n        if(this.state.showDetails) {\r\n            cardDetails = (\r\n                <div className=\"card__details\">\r\n                    <span dangerouslySetInnerHTML={{__html:marked(this.props.description)}} />\r\n                    <CheckList cardId={this.props.id}\r\n                               tasks={this.props.tasks}\r\n                               taskCallbacks={this.props.taskCallbacks} />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        let sideColor = {\r\n            position: 'absolute',\r\n            zIndex: -1,\r\n            top: 0,\r\n            bottom: 0,\r\n            left: 0,\r\n            width: 7,\r\n            backgroundColor: this.props.color\r\n        }\r\n\r\n        return(\r\n            <div className=\"card\">\r\n                <div style={sideColor}/>\r\n                {/* Need to put {} around comment in Child section - inside a JSX Object no need for this */ }\r\n                <div className={this.state.showDetails? \"card__title card__title--is-open\" : \"card__title\"} // End of line comment\r\n                /* Nomral JS Comment */ \r\n                     onClick={this.toggleDetails.bind(this)}>\r\n                     {this.props.title}\r\n                </div>\r\n              {cardDetails}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nCard.propTypes = {\r\n    id: PropTypes.number,\r\n    title: titlePropType,\r\n    description: PropTypes.string,\r\n    color: PropTypes.string,\r\n    tasks: PropTypes.arrayOf(PropTypes.object),\r\n    taskCallbacks: PropTypes.object\r\n}\r\n\r\nexport default Card\n\n\n/** WEBPACK FOOTER **\n ** ./app/Components/Card.js\n **/","import React, {Component, PropTypes} from 'react'\r\n\r\nclass CheckList extends Component {\r\n    checkInputKeyPress(evt) {\r\n        if(evt.key === 'Enter') {\r\n            this.props.taskCallbacks.add(this.props.cardId, evt.target.value)\r\n            evt.target.value = ''\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let tasks = this.props.tasks.map((task, taskIndex) => (\r\n            <li key={task.id} className=\"checklist__task\">\r\n              <input type=\"checkbox\" checked={task.done} onChange={\r\n                  this.props.taskCallbacks.toggle.bind(null, this.props.cardId, task.id, taskIndex)\r\n                } />\r\n              {task.name}\r\n              <a href=\"#\" className=\"checklist__task--remove\" onClick={\r\n                  this.props.taskCallbacks.delete.bind(null, this.props.cardId, task.id, taskIndex)\r\n              } />\r\n            </li>  \r\n        ))\r\n\r\n        return (\r\n            <div className=\"checklist\">\r\n                <ul>{tasks}</ul>\r\n                <input type=\"text\"\r\n                       className=\"checklist--add-task\"\r\n                       placeholder=\"Type then hit Enter to add a task\"\r\n                       onKeyPress={this.checkInputKeyPress.bind(this)} /> \r\n            </div>\r\n        )\r\n    }\r\n}\r\nCheckList.propTypes = {\r\n    cardId: PropTypes.number,\r\n    tasks: PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nexport default CheckList\n\n\n/** WEBPACK FOOTER **\n ** ./app/Components/CheckList.js\n **/"],"sourceRoot":""}